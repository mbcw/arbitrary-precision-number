
Todo:
	use iterate traverse _digits

完成step 1目标，将repo 公开，视用途或者反响决定后续的开发

Stage 1:
- 使用简单（单一.h文件）
- 可以计算100M精度
- 有较好的计算方式
- 有较好的输出界面
- 效率不用考虑太多

Stage 2:
- 提升运算效率

Stage 3:
- 可以输入运算公式、输出结果

Stage 4:
- 可进行高级运算
	幂函数、对数、三角等

Stage 5?


done:
阅读数值计算书籍(useless)

/= int_value时，是否有必要将之转化为Number？
parse string时，精度应该由输入数据控制
load数据时，10进制数直接读到Number的digits中，不需要做特殊处理。最后用convert_base来处理，这样统一方法。 
做to_string时，用10^8做进制，应该会提升速度，同样处理8进制、2进制。

取消max_digits限制，整数部分可以无限增加 
q_star是分数时，可以计算得更加方便，是提升效率的方法，值得尝试 

使用iterator计算各位的值
- 抽空看一下函数overloading的汇编代码，看看省略参数与不省略参数的区别

- 所有都用正数表示，最后用符号位来表示是否为正数？？？
- 感觉 声明 与 定义 应该分开，混合在一起，不是大工程能够做的。
- int -> size_t, especially for _digits
 - 用[]操作符来表示对位引用
	.get_digit(exp)

用()操作符来表示获取数值
	.digit_value(exp)

如果转换目标进制为B，在BASE可以被B整除的情况下求每一位的值将会非常容易。
BASE = 16!的话，在16进制一下都可以快速进行转换。
BASE = 2*3*5*7*11*13*17*19 = 9,699,690，将会在19以内变换进制很方便。

- 随意base方案，这样可以很容易进行转换（虽然慢点儿）

- 进制变换特别麻烦：
	7x11^10 -> 10进制，则它可能影响到所有的位，有简单方法吗？
	准备查一下数学书。


